// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// example0
void example0();
RcppExport SEXP RcppCCTZ_example0() {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    example0();
    return R_NilValue;
END_RCPP
}
// helloMoon
int helloMoon();
RcppExport SEXP RcppCCTZ_helloMoon() {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    __result = Rcpp::wrap(helloMoon());
    return __result;
END_RCPP
}
// example1
void example1();
RcppExport SEXP RcppCCTZ_example1() {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    example1();
    return R_NilValue;
END_RCPP
}
// example2
int example2();
RcppExport SEXP RcppCCTZ_example2() {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    __result = Rcpp::wrap(example2());
    return __result;
END_RCPP
}
// example3
void example3();
RcppExport SEXP RcppCCTZ_example3() {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    example3();
    return R_NilValue;
END_RCPP
}
// example4
void example4();
RcppExport SEXP RcppCCTZ_example4() {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    example4();
    return R_NilValue;
END_RCPP
}
// exampleFormat
void exampleFormat();
RcppExport SEXP RcppCCTZ_exampleFormat() {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    exampleFormat();
    return R_NilValue;
END_RCPP
}
// tzDiff
double tzDiff(const std::string tzfrom, const std::string tzto, Rcpp::Datetime dt, bool verbose);
RcppExport SEXP RcppCCTZ_tzDiff(SEXP tzfromSEXP, SEXP tztoSEXP, SEXP dtSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const std::string >::type tzfrom(tzfromSEXP);
    Rcpp::traits::input_parameter< const std::string >::type tzto(tztoSEXP);
    Rcpp::traits::input_parameter< Rcpp::Datetime >::type dt(dtSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    __result = Rcpp::wrap(tzDiff(tzfrom, tzto, dt, verbose));
    return __result;
END_RCPP
}
// toTz
Rcpp::Datetime toTz(Rcpp::Datetime dt, const std::string tzfrom, const std::string tzto, bool verbose);
RcppExport SEXP RcppCCTZ_toTz(SEXP dtSEXP, SEXP tzfromSEXP, SEXP tztoSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::Datetime >::type dt(dtSEXP);
    Rcpp::traits::input_parameter< const std::string >::type tzfrom(tzfromSEXP);
    Rcpp::traits::input_parameter< const std::string >::type tzto(tztoSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    __result = Rcpp::wrap(toTz(dt, tzfrom, tzto, verbose));
    return __result;
END_RCPP
}
